import java.io; 

  

public class StormChaser { 

  

     public static void main(String []arg){  

          

         // Constants 

         final int MAX_STORMS = 300; 

          

         // array of Storms 

         Storm CurrentStorm; // storm returned by Get 

         int nStorms = 0; //number in array list 

         int totalStorms = 0; 

         Storm [] List = new Storm[MAX_STORMS]; 

       

         Scanner fileInput; 

         // Opening hurricane data file 

         try{ 

             System.out.println("Opening hurricane data file..."); 

             fileInput = new Scanner(new File("hurricanedata1950to2015.txt")); 

         } 

         catch(FileNotFoundException e){ 

             System.err.println("FileNotFoundException: " + e.getMessage()); 

            return; 

         } 

         System..out.println("Opening hurricane data file..."); 

         fileInput = new Scanner (new File("hurricanedata1950to2015.txt")); 

     } 

Catch(FileNotFoundException e){  

 System.err.println(“FileNotFoundException: “ + e.getMessage());   

 return;   

 }   

 System.out.println( “File opened successfully . . .”);   

 System.out.println ( “Reading file. . .” );   

 While ( fileinput.hasNextLine () )  

 {   

 CurrentStorm = GetStorm(fileInput) ;    

 ++totalStorms;   

 If(CurrentStorm.getCategory() >=3  

  

{   

  

    List[nStorms] = CurrentStorm;  

  

    nStorms++;  

  

}  

  

}  

 System.out.println( “Number of storms: “ + totalStorms ) ;   

 System.out.println( “Hurricane with category 3 and above: “ + nStorms );  

  

DisplayStorms( "First Twenty Storms", List, 20);  

  

Sort( List, nStorms );  

  

DisplayStorms( "Top Forty Storms", List, 20);  

  

Sort (List, nStorms;)  

  

DisplayStorms("Top Forty Storms", List, 40);  

  

fileInput.close();  

  

}  

 public static Storm GetStorm( Scanner fileInput )  

  

{  

  

    final int STORMID = 0;  

  

    final int NAME = 1;  

  

    final int MAXRECORDS = 2;  

    final int BEGINDATE = 0; 

    final int WIND = 6; 

    final int PRESSURE = 7; 

     

    int wind = 0, pressure = 0, maxRecords = 0; 

    int beginDate = 0, duration = 0; 

    String name; 

    String stormID 

    String header; 

    String data; 

     

    Storm NewStorm; 

     

    header = fileInput.nextLine(); 

     

    String[] headerElements = header.split(","); 

    stormID = headerElements[STORMID].trim(); 

    name = headerElements[NAME].trim(); 

    maxRecords = Integer.parseInt(headerElements[MAXRECORDS].trim()); 

    // Read first row of Storm data 

    data = fileInput.nextLine(); 

    String[] dataElements = data.split(","); 

     

    // Extract the data elements 

    beginDate = Integer.parseInt(dataElements[BEGINDATE].trim()); 

    wind = Integer.parseInt(dataElements[WIND].trim()); 

    pressure = Integer.parseInt(dataElements[Pressure].trim()); 

    duration = 6; 

     

    // Create Storm object 

    NewStorm = new Storm(stormID, beginDate, duration, name, wind, pressure); 

     

    for( int i = 1; i < maxRecords; i++) 

    { 

        data = fileInput.nextLine(); 

         

        dataElements = data.split(","); 

    // Extract the data elements 

    wind = Integer.parseInt(dataElements[WIND].trim()); 

    pressure = Integer.parseInt(dataElements[PRESSURE].trim()); 

    duration += 6; 

     

    // Update Storm object 

    NewStorm.setPressure(pressure); 

    NewStorm.setWind(wind); 

    NewStorm.setDuration(duration); 

     

    } 

     

// Return the new storm object 

return NewStorm; 

} 

public static void DisplayStorms( String title, Storm [] List, int NStorms) 

{ 

    // display NStorms storms  

    // print some title and column headings 

    System.out.println(title); 

    System.out.println( 

        Begin       Duration 

        System.out.println( 

            "Storm ID   Date    (hours) Name    Category    Winds (mph) Press. (mb)"); 

            System.out.println( 

            "---------------------------------------------------------"); 

            for( int k = 0; k < NStorms; k++ ) 

            { 

                System.out.print(List[k].toString()); 

            } 

            System.out.println ("\n"); 

} 

public static void Sort (Storm StormList[], int n) 

{ 

    // bubble sort the list of Storms 

    int pass = 0, k, switches; 

    Storm temp; 

    switches = 1; 

    while (switches=0) 

    { 

        switches 0; 

        pass++; 

        for( k = 0; k < n - pass; k++) 

        { 

            if( StormList[k].getCategory() < StormList[k+1].getCategory()) 

            { 

                temp = StormList[k]; 

                StormList[k] = StormList[k+1]; 

                StormList[k+1] = temp; 

                switches = 1; 

            } 

            } 
